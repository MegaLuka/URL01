---

- name: "configuration play." 
  hosts: all
  user: ubuntu
  become: true
  become_method: sudo
  # may need to root again
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      ansible.builtin.wait_for_connection:

   # install python
    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

    - name: "add block to bashrc"
      ansible.builtin.blockinfile:
          path: /home/ubuntu/.bashrc
          block: |
            export TYPEORM_CONNECTION="{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
            export TYPEORM_ENTITIES="{{ lookup('env', 'TYPEORM_ENTITIES')}}"
            export TYPEORM_HOST="{{ lookup('env', 'TYPEORM_HOST')}}"
            export TYPEORM_PORT=5432
            export TYPEORM_USERNAME="{{ lookup('env', 'TYPEORM_USERNAME')}}"
            export TYPEORM_PASSWORD="{{ lookup('env', 'TYPEORM_PASSWORD')}}"
            export TYPEORM_DATABASE="{{ lookup('env', 'TYPEORM_DATABASE')}}"
            export TYPEORM_MIGRATIONS="{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
            export TYPEORM_MIGRATIONS_DIR="{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
          state: present
          create: true
  

  # Get the environment variables from CircleCI and add to the EC2 instance
  # must verify
  # set tay env in ec2? allow app to run?
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

  roles:
    - configure-server
    # Your code here